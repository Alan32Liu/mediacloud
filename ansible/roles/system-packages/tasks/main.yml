- include_vars: ../vars/main-{{ ansible_distribution }}.yml
  tags:
    - system-packages

- include: main-{{ ansible_distribution }}.yml
  tags:
    - system-packages

- name: "Check to see if Pip 2.7 is already installed"
  command: "pip2.7 --version"
  ignore_errors: true
  register: pip2_is_installed
  changed_when: false
  tags:
    - system-packages

- name: "Check to see if Pip {{ python_version }} is already installed"
  command: "pip{{ python_version }} --version"
  ignore_errors: true
  register: pip3_is_installed
  changed_when: false
  tags:
    - system-packages

- name: Install Pip for both Python versions
  block:

    - name: Create temporary directory for get-pip.py
      tempfile:
        state: directory
        suffix: get_pip
      register: get_pip_tempdir
      tags:
        - system-packages

    - name: Download get-pip.py
      get_url:
        url: https://bootstrap.pypa.io/get-pip.py
        dest: "{{ get_pip_tempdir.path }}/get-pip.py"
      tags:
        - system-packages
    
    - name: "Install Pip 2.7"
      command: "python2.7 {{ get_pip_tempdir.path }}/get-pip.py"
      become: "{{ pip_system_install_become }}"
      tags:
        - system-packages

    - name: "Install Pip {{ python_version }}"
      command: "python{{ python_version }} {{ get_pip_tempdir.path }}/get-pip.py -U --force-reinstall -v"
      become: "{{ pip_system_install_become }}"
      tags:
        - system-packages
    
  when: pip2_is_installed.rc != 0 or pip3_is_installed.rc != 0

- name: "Install Supervisor via Pip for Python 2.x"
  pip:
    name: supervisor
    executable: "pip2"
  become: "{{ pip_system_install_become }}"
  tags:
    - system-packages

- name: "Install Virtualenv via Pip for Python {{ python_version }}"
  pip:
    name: virtualenv
    executable: "pip{{ python_version }}"
  become: "{{ pip_system_install_become }}"
  tags:
    - system-packages

- name: "Install Virtualenvwrapper via Pip {{ python_version }}"
  pip:
    name: virtualenvwrapper
    executable: "pip{{ python_version }}"
  become: "{{ pip_system_install_become }}"
  tags:
    - system-packages

# Temporary hack to overcome https://github.com/mitchellh/vagrant-aws/issues/510
- name: Install Vagrant's fog-core
  command: vagrant plugin install --plugin-version 1.43 fog-core
  args:
    creates: "{{ ansible_env.HOME }}/.vagrant.d/gems/*/gems/fog-core-1.43*"
  tags:
    - system-packages

- name: Install Vagrant's vagrant-aws
  command: vagrant plugin install vagrant-aws
  args:
    creates: "{{ ansible_env.HOME }}/.vagrant.d/gems/*/gems/vagrant-aws-*"
  tags:
    - system-packages
